{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srira\\\\Documents\\\\scale infinite-react\\\\pie chart\\\\src\\\\PieChart\\\\PieChart.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PieChart() {\n  _s();\n\n  const [data1, setData] = useState([]);\n  const [helpr, setHelpr] = useState(true);\n\n  if (helpr) {\n    fetch(\"http://216.48.189.38:9090/api/v1/query?query=container_cpu_usage_seconds_total{namespace=%22sathiyapk%22,container=%22POD%22}\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(rese => setData(rese.data.result));\n    setHelpr(false);\n  }\n\n  console.log(data1);\n  let datafromUrl = [[\"Task\", \"Hours per Day\"]];\n\n  for (const [index, value] of data1.entries()) {\n    let metricValue = [];\n    metricValue.push(value.metric.pod, +value.value[1]);\n    datafromUrl.push(metricValue);\n  }\n\n  const options = {\n    title: \"Data received from API\"\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartType: \"PieChart\",\n    data: datafromUrl,\n    options: options,\n    width: \"100%\",\n    height: \"400px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PieChart, \"YpxljQoVm1sIku/OmAwMbyeimlk=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["useCallback","useEffect","useState","Chart","PieChart","data1","setData","helpr","setHelpr","fetch","method","then","res","json","rese","data","result","console","log","datafromUrl","index","value","entries","metricValue","push","metric","pod","options","title"],"sources":["C:/Users/srira/Documents/scale infinite-react/pie chart/src/PieChart/PieChart.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nfunction PieChart() {\r\n  const [data1, setData] = useState([]);\r\n  const [helpr, setHelpr] = useState(true);\r\n\r\n  if (helpr) {\r\n    fetch(\r\n      \"http://216.48.189.38:9090/api/v1/query?query=container_cpu_usage_seconds_total{namespace=%22sathiyapk%22,container=%22POD%22}\",\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((rese) => setData(rese.data.result));\r\n\r\n    setHelpr(false);\r\n  }\r\n\r\n  console.log(data1);\r\n\r\n  let datafromUrl = [[\"Task\", \"Hours per Day\"]];\r\n\r\n  for (const [index, value] of data1.entries()) {\r\n    let metricValue = [];\r\n    metricValue.push(value.metric.pod, +value.value[1]);\r\n    datafromUrl.push(metricValue);\r\n  }\r\n\r\n  const options = {\r\n    title: \"Data received from API\",\r\n  };\r\n\r\n  return (\r\n    <Chart\r\n      chartType=\"PieChart\"\r\n      data={datafromUrl}\r\n      options={options}\r\n      width={\"100%\"}\r\n      height={\"400px\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EAEA,IAAIK,KAAJ,EAAW;IACTE,KAAK,CACH,+HADG,EAEH;MACEC,MAAM,EAAE;IADV,CAFG,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,IAAD,IAAUR,OAAO,CAACQ,IAAI,CAACC,IAAL,CAAUC,MAAX,CAPzB;IASAR,QAAQ,CAAC,KAAD,CAAR;EACD;;EAEDS,OAAO,CAACC,GAAR,CAAYb,KAAZ;EAEA,IAAIc,WAAW,GAAG,CAAC,CAAC,MAAD,EAAS,eAAT,CAAD,CAAlB;;EAEA,KAAK,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAX,IAA6BhB,KAAK,CAACiB,OAAN,EAA7B,EAA8C;IAC5C,IAAIC,WAAW,GAAG,EAAlB;IACAA,WAAW,CAACC,IAAZ,CAAiBH,KAAK,CAACI,MAAN,CAAaC,GAA9B,EAAmC,CAACL,KAAK,CAACA,KAAN,CAAY,CAAZ,CAApC;IACAF,WAAW,CAACK,IAAZ,CAAiBD,WAAjB;EACD;;EAED,MAAMI,OAAO,GAAG;IACdC,KAAK,EAAE;EADO,CAAhB;EAIA,oBACE,QAAC,KAAD;IACE,SAAS,EAAC,UADZ;IAEE,IAAI,EAAET,WAFR;IAGE,OAAO,EAAEQ,OAHX;IAIE,KAAK,EAAE,MAJT;IAKE,MAAM,EAAE;EALV;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAxCQvB,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}